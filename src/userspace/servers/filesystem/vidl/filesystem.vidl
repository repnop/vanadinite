use core::{U8, Unit, USize};
use sync::SharedBuffer;

@orderable
@trivial
struct FileHandle {
    id: USize,
}

struct File {
    handle: FileHandle,
    buffer: SharedBuffer,
}

@comparable
@trivial
enum Error {
    FileNotFound,
    InvalidHandle,
    InvalidPath,
    IoError,
    OperationNotSupported,
}

@comparable
@trivial
enum OpenOptions {
    Append,
    Overwrite,
    ReadOnly,
}

service Filesystem {
    fn open(path: String, options: OpenOptions) -> Result<File, Error>;
    fn close(handle: FileHandle) -> Result<Unit, Error>;
    fn read(handle: FileHandle) -> Result<USize, Error>;
}